@using Gungi.Front.Services
@page "/gastos"
@inject GungiApiService ApiService

<h3>Gastos Detalhados</h3>
@if (mensagemErro != null)
{
    <p style="color: red">@mensagemErro</p>
}
else if (gastos == null)
{
    <p>Carregando...</p>
}
else if (!gastos.Any())
{
    <p>Nenhum gasto encontrado.</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Data</th>
            <th>Descrição</th>
            <th>Categoria</th>
            <th>Valor</th>
            <th>Forma Pagamento</th>
            <th>Status</th>
            <th>Observação</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var g in gastos)
        {
            <tr>
                <td>@g.Id</td>
                <td>@g.DataLancamento.ToString("dd/MM/yyyy HH:mm")</td>
                <td>@g.Descricao</td>
                <td>@g.Categoria</td>
                <td>R$ @g.Valor</td>
                <td>@g.FormaPagamento</td>
                <td>
                    @(g.StatusPagamento ? "Pago" : "Pendente")
                </td>
                <td>@g.Observacao</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    List<Gungi.Front.Models.GastoDetalhadoDto> gastos = null;
    string mensagemErro = null;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            gastos = await ApiService.GetGastosDetalhadosAsync();
        }
        catch (Exception ex)
        {
            mensagemErro = $"Erro ao buscar gastos: {ex.Message}";
        }
    }
}
